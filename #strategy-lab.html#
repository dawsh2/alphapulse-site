1<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Strategy Lab - AlphaPulse</title>
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        body { 
            font-family: Verdana, Geneva, sans-serif; 
            font-size: 10pt; 
            background: #f6f6ef; 
            color: #000; 
            line-height: 1.4;
        }
        
        .header { 
            background: #00aa44; 
            padding: 6px; 
            color: white; 
            display: flex; 
            align-items: center; 
            gap: 10px;
        }
        
        .logo { font-weight: bold; font-size: 11pt; }
        .nav { color: white; }
        .nav a { color: white; text-decoration: none; margin-right: 10px; }
        .nav a:hover { text-decoration: underline; }
        .nav a.active { font-weight: bold; }
        
        .container { 
            display: grid; 
            grid-template-columns: 280px 1fr; 
            height: calc(100vh - 42px); 
            gap: 1px;
            background: #ccc;
        }
        
        .sidebar, .main-content { 
            background: white; 
            display: flex; 
            flex-direction: column;
            overflow: hidden;
        }
        
        .sidebar-header { 
            background: #f6f6ef; 
            padding: 6px 8px; 
            border-bottom: 1px solid #ccc; 
            font-weight: bold; 
            font-size: 9pt; 
            color: #666;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .sidebar-tabs { 
            display: flex; 
            gap: 15px; 
        }
        
        .sidebar-tab { 
            cursor: pointer; 
            padding: 4px 0; 
            border-bottom: 2px solid transparent;
            font-size: 8pt;
        }
        
        .sidebar-tab.active { 
            font-weight: bold; 
            border-bottom-color: #00aa44; 
        }
        
        .sidebar-content { 
            flex: 1; 
            overflow-y: auto; 
            padding: 8px;
        }
        
        .main-tabs { 
            background: #f6f6ef; 
            padding: 6px 8px; 
            border-bottom: 1px solid #ccc; 
            display: flex; 
            gap: 20px; 
            font-size: 9pt;
        }
        
        .main-tab { 
            cursor: pointer; 
            padding: 4px 0; 
            border-bottom: 2px solid transparent;
        }
        
        .main-tab.active { 
            font-weight: bold; 
            border-bottom-color: #00aa44; 
        }
        
        .tab-content { 
            flex: 1; 
            display: flex; 
            flex-direction: column;
            overflow: hidden;
        }
        
        .tab-content.hidden { 
            display: none; 
        }
        
        .code-editor { 
            flex: 1; 
            font-family: 'SF Mono', Monaco, 'Cascadia Code', monospace; 
            font-size: 12pt; 
            border: none; 
            padding: 12px; 
            resize: none; 
            outline: none; 
            background: #fafafa; 
            line-height: 1.6;
            min-height: 500px;
        }
        
        .btn { 
            background: #f6f6ef; 
            border: 1px solid #ccc; 
            padding: 3px 8px; 
            font-size: 8pt; 
            cursor: pointer; 
            text-decoration: none; 
            color: #000;
        }
        
        .btn:hover { 
            background: #eee; 
        }
        
        .btn.primary { 
            background: #00aa44; 
            color: white; 
            border-color: #00aa44;
        }
        
        .btn.primary:hover { 
            background: #008833; 
        }
        
        .status-bar { 
            background: #f6f6ef; 
            padding: 4px 8px; 
            border-top: 1px solid #ccc; 
            font-size: 8pt; 
            color: #666; 
            display: flex; 
            justify-content: space-between; 
            align-items: center;
        }
        
        .validation-success { color: #008800; }
        .validation-error { color: #cc0000; font-weight: bold; }
        
        /* Analysis Workspace Styles */
        .analysis-workspace { 
            display: grid; 
            grid-template-columns: 280px 1fr 200px; 
            height: 100%; 
            gap: 1px; 
            background: #ccc;
        }
        
        .analysis-sidebar, .analysis-main, .analysis-actions { 
            background: white; 
            display: flex; 
            flex-direction: column;
            overflow: hidden;
        }
        
        .signal-query { 
            padding: 8px; 
            border-bottom: 1px solid #eee;
        }
        
        .signal-query h4 { 
            margin-bottom: 8px; 
            font-size: 9pt; 
            color: #333;
        }
        
        .query-filters { 
            display: grid; 
            gap: 6px; 
            margin-top: 8px;
        }
        
        .filter-row { 
            display: flex; 
            align-items: center; 
            gap: 6px; 
            font-size: 8pt;
        }
        
        .filter-input { 
            width: 60px; 
            padding: 2px 4px; 
            border: 1px solid #ccc; 
            font-size: 8pt;
        }
        
        .quick-actions { 
            padding: 8px;
        }
        
        .quick-actions h4 { 
            margin-bottom: 8px; 
            font-size: 9pt; 
            color: #333;
        }
        
        .action-btn { 
            width: 100%; 
            margin-bottom: 4px; 
            text-align: left; 
            padding: 6px 8px; 
            font-size: 8pt; 
            background: #f6f6ef; 
            border: 1px solid #ccc; 
            cursor: pointer;
        }
        
        .action-btn:hover { 
            background: #eee; 
        }
        
        .signal-browser { 
            flex: 1; 
            overflow-y: auto; 
            padding: 8px;
        }
        
        .signal-table { 
            width: 100%; 
            border-collapse: collapse; 
            font-size: 8pt;
        }
        
        .signal-table th { 
            background: #f6f6ef; 
            padding: 4px 6px; 
            text-align: left; 
            border-bottom: 1px solid #ccc; 
            font-size: 7pt; 
            font-weight: bold;
        }
        
        .signal-table td { 
            padding: 3px 6px; 
            border-bottom: 1px solid #eee; 
            cursor: pointer;
        }
        
        .signal-table tr:hover { 
            background: #f0f0f0; 
        }
        
        .signal-table tr.selected { 
            background: #e6f3ff; 
        }
        
        .metric-good { color: #008800; font-weight: bold; }
        .metric-bad { color: #cc0000; }
        .metric-neutral { color: #666; }
        
        .analysis-notebook { 
            flex: 1; 
            border: none;
        }
        
        .analysis-dashboard { 
            flex: 1; 
            padding: 12px; 
            overflow-y: auto;
        }
        
        .chart-container { 
            background: white; 
            border: 1px solid #ddd; 
            margin-bottom: 12px; 
            padding: 8px; 
            border-radius: 3px;
        }
        
        .chart-title { 
            font-weight: bold; 
            margin-bottom: 8px; 
            font-size: 9pt;
        }
        
        .chart-placeholder { 
            height: 200px; 
            background: #f8f8f8; 
            border: 1px dashed #ccc; 
            display: flex; 
            align-items: center; 
            justify-content: center; 
            color: #999; 
            font-size: 9pt;
        }
        
        .analysis-actions { 
            padding: 8px;
        }
        
        .analysis-actions h4 { 
            margin-bottom: 8px; 
            font-size: 9pt; 
            color: #333;
        }
        
        .selection-info { 
            background: #f0f8ff; 
            border: 1px solid #b3d9ff; 
            padding: 8px; 
            margin-bottom: 8px; 
            border-radius: 3px; 
            font-size: 8pt;
        }
        
        .selection-count { 
            font-weight: bold; 
            color: #0066cc;
        }
        
        .action-section { 
            margin-bottom: 12px;
        }
        
        .action-section h5 { 
            margin-bottom: 4px; 
            font-size: 8pt; 
            color: #666;
        }
        
        .ensemble-preview { 
            background: #f6f6ef; 
            border: 1px solid #ccc; 
            padding: 8px; 
            margin-top: 8px; 
            font-family: monospace; 
            font-size: 7pt; 
            line-height: 1.4;
        }
        
        .progress-section { 
            margin-top: 12px; 
            padding-top: 8px; 
            border-top: 1px solid #eee;
        }
        
        .run-status { 
            padding: 6px 8px; 
            margin-bottom: 8px; 
            border-radius: 3px; 
            font-size: 8pt;
        }
        
        .status-idle { background: #f0f0f0; color: #666; }
        .status-running { background: #fff3cd; color: #856404; }
        .status-complete { background: #d4edda; color: #155724; }
        
        .progress-bar { 
            width: 100%; 
            height: 4px; 
            background: #eee; 
            margin-top: 4px; 
            border-radius: 2px; 
            overflow: hidden;
        }
        
        .progress-fill { 
            height: 100%; 
            background: #00aa44; 
            width: 0%; 
            transition: width 0.3s ease;
        }
        
        /* Additional styles for new features */
        .period-item {
            padding: 6px 8px;
            border: 1px solid #ddd;
            border-radius: 3px;
            cursor: pointer;
            background: white;
        }
        
        .period-item:hover {
            background: #f0f8ff;
            border-color: #0066cc;
        }
        
        .period-item.selected {
            background: #e6f3ff;
            border-color: #0066cc;
        }
        
        .parameter-item { 
            display: flex; 
            justify-content: space-between; 
            padding: 2px 0; 
            border-bottom: 1px solid #eee;
        }
        
        @keyframes pulse {
            0% { transform: scale(1); }
            50% { transform: scale(1.2); }
            100% { transform: scale(1); }
        }
        
        /* Search and Filter Styles */
        .search-box { 
            width: 100%; 
            padding: 4px 6px; 
            border: 1px solid #ccc; 
            font-size: 9pt; 
            margin-bottom: 8px;
        }
        
        .strategy-item { 
            padding: 3px 6px; 
            margin: 1px 0; 
            cursor: pointer; 
            border-radius: 2px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .strategy-item:hover { background: #f0f0f0; }
        .strategy-item.selected { background: #e6f3ff; color: #0066cc; }
        
        .file-tabs { 
            background: #eee; 
            padding: 4px 8px; 
            border-bottom: 1px solid #ccc; 
            display: flex; 
            gap: 5px;
            font-size: 8pt;
        }
        
        .file-tab { 
            background: white; 
            border: 1px solid #ccc; 
            padding: 4px 8px; 
            cursor: pointer; 
            border-radius: 3px 3px 0 0;
            display: flex;
            align-items: center;
            gap: 5px;
        }
        
        .file-tab.active { 
            background: #fafafa; 
            border-bottom-color: #fafafa;
        }
        
        .editor-header { 
            background: #f6f6ef; 
            padding: 6px 8px; 
            border-bottom: 1px solid #ccc; 
            display: flex; 
            justify-content: space-between; 
            align-items: center;
            font-size: 9pt;
        }
    </style>
</head>
<body>
    <div class="header">
        <div class="logo">AlphaPulse</div>
        <div class="nav">
            <a href="index.html">new</a> |
            <a href="strategy-lab.html" class="active">lab</a> |
            <a href="live-trading.html">live</a>
        </div>
    </div>

    <div class="container">
        <!-- Sidebar -->
        <div class="sidebar">
            <div class="sidebar-header">
                <div class="sidebar-tabs">
                    <div class="sidebar-tab active" data-sidebar-tab="registry">Registry</div>
                    <div class="sidebar-tab" data-sidebar-tab="files">Files</div>
                </div>
            </div>
            
            <!-- Registry Tab -->
            <div class="sidebar-content" id="registryTab">
                <input type="text" class="search-box" placeholder="Search strategies..." id="strategySearch">
                
                <div style="font-size: 9pt;">
                    <div style="margin-bottom: 12px;">
                        <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt;">TECHNICAL ANALYSIS (5)</div>
                        <div class="strategy-item" data-strategy="bollinger_bands">
                            <span>bollinger_bands</span>
                            <span style="font-size: 7pt; color: #999;">2 params</span>
                        </div>
                        <div class="strategy-item" data-strategy="ma_crossover">
                            <span>ma_crossover</span>
                            <span style="font-size: 7pt; color: #999;">2 params</span>
                        </div>
                        <div class="strategy-item" data-strategy="rsi_strategy">
                            <span>rsi_strategy</span>
                            <span style="font-size: 7pt; color: #999;">3 params</span>
                        </div>
                    </div>
                    
                    <div style="margin-bottom: 12px;">
                        <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt;">MACHINE LEARNING (3)</div>
                        <div class="strategy-item" data-strategy="lstm_predictor">
                            <span>lstm_predictor</span>
                            <span style="font-size: 7pt; color: #999;">6 params</span>
                        </div>
                        <div class="strategy-item" data-strategy="random_forest">
                            <span>random_forest</span>
                            <span style="font-size: 7pt; color: #999;">4 params</span>
                        </div>
                    </div>
                </div>
            </div>
            
            <!-- Files Tab -->
            <div class="sidebar-content hidden" id="filesTab">
                <div style="font-size: 9pt;">
                    <div style="margin-bottom: 8px;">
                        <div style="font-weight: bold; color: #666; margin-bottom: 4px;">strategies/</div>
                        <div class="strategy-item" data-file="strategies/bollinger_bands.py">bollinger_bands.py</div>
                        <div class="strategy-item" data-file="strategies/ma_crossover.py">ma_crossover.py</div>
                    </div>
                    
                    <div style="margin-bottom: 8px;">
                        <div style="font-weight: bold; color: #666; margin-bottom: 4px;">configs/</div>
                        <div class="strategy-item selected" data-file="configs/bollinger_sweep.yaml">bollinger_sweep.yaml</div>
                        <div class="strategy-item" data-file="configs/ensemble_test.yaml">ensemble_test.yaml</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- Main Content -->
        <div class="main-content">
            <div class="main-tabs">
                <div class="main-tab active" data-main-tab="config">Config Editor</div>
                <div class="main-tab" data-main-tab="analysis">Analysis</div>
                <div class="main-tab" data-main-tab="validation">Validation</div>
                <div class="main-tab" data-main-tab="replay">Replay</div>
                <div class="main-tab" data-main-tab="strategy">Strategy Editor</div>
            </div>

            <!-- Config Editor Tab -->
            <div class="tab-content" id="configTab">
                <div class="file-tabs">
                    <div class="file-tab active">
                        <span>bollinger_sweep.yaml</span>
                        <span style="cursor: pointer; color: #999; font-weight: bold;">×</span>
                    </div>
                    <div style="background: #f6f6ef; border: 1px solid #ccc; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 8pt;">+ New Config</div>
                </div>
                
                <div class="editor-header">
                    <div style="display: flex; gap: 15px; align-items: center;">
                        <span>YAML Configuration</span>
                        <span class="validation-success">✓ Valid</span>
                    </div>
                    <div style="display: flex; gap: 8px;">
                        <button class="btn">Validate</button>
                        <button class="btn">Save</button>
                        <button class="btn primary" id="runConfigBtn">Run Backtest</button>
                    </div>
                </div>
                
                <textarea class="code-editor" id="configEditor" spellcheck="false">name: bollinger_sweep
data: SPY_5m
strategy:
  bollinger_bands:
    period: "range(10, 50, 1)"
    std_dev: "range(1.0, 3.0, 0.5)"
    
constraints: "intraday"

# This config will test 41 * 5 = 205 parameter combinations
# Testing Bollinger Bands mean reversion with:
# - Period from 10 to 50 in steps of 1
# - Standard deviation from 1.0 to 3.0 in steps of 0.5
# - Only intraday signals (no overnight positions)</textarea>
                
                <div class="status-bar">
                    <div style="display: flex; gap: 15px;">
                        <span>Line 15, Col 35</span>
                        <span class="validation-success">✓ Valid YAML</span>
                        <span>205 combinations</span>
                    </div>
                    <div>
                        <span>~2 min runtime</span>
                    </div>
                </div>
            </div>

            <!-- Analysis Tab -->
            <div class="tab-content hidden" id="analysisTab">
                <div style="display: grid; grid-template-columns: 250px 1fr 200px; height: 100%; gap: 1px; background: #ccc;">
                    <!-- Analysis Snippets Sidebar -->
                    <div style="background: white; display: flex; flex-direction: column; overflow: hidden;">
                        <div style="background: #f6f6ef; padding: 6px 8px; border-bottom: 1px solid #ccc; font-weight: bold; font-size: 9pt; color: #666;">
                            Analysis Snippets
                        </div>
                        
                        <div style="flex: 1; overflow-y: auto; padding: 8px;">
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt; text-transform: uppercase;">DATA LOADING</div>
                                <button class="action-btn snippet-btn" data-snippet="load_signals">📊 Load Signal Traces</button>
                                <button class="action-btn snippet-btn" data-snippet="load_results">📈 Load Backtest Results</button>
                                <button class="action-btn snippet-btn" data-snippet="load_benchmark">📉 Load Benchmark Data</button>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt; text-transform: uppercase;">FILTERING</div>
                                <button class="action-btn snippet-btn" data-snippet="filter_sharpe">🎯 Filter by Sharpe</button>
                                <button class="action-btn snippet-btn" data-snippet="filter_drawdown">📉 Filter by Drawdown</button>
                                <button class="action-btn snippet-btn" data-snippet="filter_trades">📊 Filter by Trade Count</button>
                                <button class="action-btn snippet-btn" data-snippet="top_performers">⭐ Get Top Performers</button>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt; text-transform: uppercase;">VISUALIZATION</div>
                                <button class="action-btn snippet-btn" data-snippet="equity_curves">📈 Plot Equity Curves</button>
                                <button class="action-btn snippet-btn" data-snippet="heatmap">🔥 Parameter Heatmap</button>
                                <button class="action-btn snippet-btn" data-snippet="correlation">🔗 Correlation Matrix</button>
                                <button class="action-btn snippet-btn" data-snippet="drawdown_plot">📉 Drawdown Analysis</button>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt; text-transform: uppercase;">ANALYSIS</div>
                                <button class="action-btn snippet-btn" data-snippet="regime_analysis">📊 Regime Analysis</button>
                                <button class="action-btn snippet-btn" data-snippet="sensitivity">🎯 Parameter Sensitivity</button>
                                <button class="action-btn snippet-btn" data-snippet="stability">⚖️ Stability Analysis</button>
                                <button class="action-btn snippet-btn" data-snippet="factor_analysis">🧮 Factor Analysis</button>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <div style="font-weight: bold; color: #666; margin-bottom: 4px; font-size: 8pt; text-transform: uppercase;">ENSEMBLE</div>
                                <button class="action-btn snippet-btn" data-snippet="create_ensemble">⚡ Create Ensemble</button>
                                <button class="action-btn snippet-btn" data-snippet="optimize_weights">🎯 Optimize Weights</button>
                                <button class="action-btn snippet-btn" data-snippet="test_ensemble">🧪 Test Ensemble</button>
                                <button class="action-btn snippet-btn" data-snippet="generate_config">📝 Generate Config</button>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Jupyter Notebook -->
                    <div style="background: white; display: flex; flex-direction: column; overflow: hidden;">
                        <div style="background: #f6f6ef; padding: 6px 8px; border-bottom: 1px solid #ccc; display: flex; justify-content: space-between; align-items: center; font-size: 9pt;">
                            <div style="display: flex; gap: 15px; align-items: center;">
                                <span>Analysis Notebook</span>
                                <span style="font-size: 8pt; color: #666;">bollinger_sweep_analysis.ipynb</span>
                            </div>
                            <div style="display: flex; gap: 8px;">
                                <button class="btn" id="runAllCells">▶️ Run All</button>
                                <button class="btn" id="clearOutput">🗑️ Clear</button>
                                <button class="btn" id="saveNotebook">💾 Save</button>
                                <button class="btn primary" id="generateConfig">📝 Generate Config</button>
                            </div>
                        </div>
                        
                        <!-- Embedded Jupyter Notebook -->
                        <div style="flex: 1; background: white; overflow: hidden;">
                            <div style="height: 100%; padding: 12px; overflow-y: auto; font-family: monospace; font-size: 11pt; line-height: 1.4;">
                                <div style="border-left: 4px solid #0066cc; padding-left: 8px; margin-bottom: 16px;">
                                    <div style="font-size: 10pt; color: #666; margin-bottom: 4px;">[ 1 ]:</div>
                                    <div style="background: #f8f8f8; padding: 8px; border-radius: 3px; margin-bottom: 8px;">
<span style="color: #0066cc;">import</span> pandas <span style="color: #0066cc;">as</span> pd<br>
<span style="color: #0066cc;">from</span> analysis_library <span style="color: #0066cc;">import</span> *<br>
<span style="color: #0066cc;">from</span> strategy_registry <span style="color: #0066cc;">import</span> load_signals, PerformanceAnalyzer<br><br>
<span style="color: #666;"># Load backtest results</span><br>
signals = load_signals(<span style="color: #008800;">'bollinger_sweep'</span>)<br>
analyzer = PerformanceAnalyzer(signals)<br>
<span style="color: #cc6600;">print</span>(<span style="color: #008800;">f"Loaded {len(signals)} strategy traces"</span>)
                                    </div>
                                    <div style="background: #f0f8ff; padding: 8px; border-radius: 3px; font-size: 10pt;">
                                        Loaded 205 strategy traces
                                    </div>
                                </div>
                                
                                <div style="border-left: 4px solid #0066cc; padding-left: 8px; margin-bottom: 16px;">
                                    <div style="font-size: 10pt; color: #666; margin-bottom: 4px;">[ 2 ]:</div>
                                    <div style="background: #f8f8f8; padding: 8px; border-radius: 3px; margin-bottom: 8px;">
<span style="color: #666;"># Quick performance overview</span><br>
performance_df = analyzer.get_performance_summary()<br>
top_10 = performance_df.nlargest(<span style="color: #cc6600;">10</span>, <span style="color: #008800;">'sharpe_ratio'</span>)<br>
display(top_10[[<span style="color: #008800;">'strategy_params'</span>, <span style="color: #008800;">'sharpe_ratio'</span>, <span style="color: #008800;">'max_drawdown'</span>, <span style="color: #008800;">'total_trades'</span>]])
                                    </div>
                                    <div style="background: #f0f8ff; padding: 8px; border-radius: 3px; font-size: 9pt;">
                                        <div style="font-weight: bold; margin-bottom: 4px;">Top 10 Strategies:</div>
                                        <table style="width: 100%; border-collapse: collapse; font-size: 8pt;">
                                            <tr style="background: #eee;">
                                                <th style="padding: 4px; text-align: left; border: 1px solid #ccc;">Strategy</th>
                                                <th style="padding: 4px; text-align: left; border: 1px solid #ccc;">Sharpe</th>
                                                <th style="padding: 4px; text-align: left; border: 1px solid #ccc;">Max DD</th>
                                                <th style="padding: 4px; text-align: left; border: 1px solid #ccc;">Trades</th>
                                            </tr>
                                            <tr>
                                                <td style="padding: 4px; border: 1px solid #ccc;">BB(period=23, std_dev=1.8)</td>
                                                <td style="padding: 4px; border: 1px solid #ccc; color: #008800;">1.84</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">-8.2%</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">247</td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 4px; border: 1px solid #ccc;">BB(period=20, std_dev=2.0)</td>
                                                <td style="padding: 4px; border: 1px solid #ccc; color: #008800;">1.67</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">-6.1%</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">198</td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 4px; border: 1px solid #ccc;">BB(period=18, std_dev=1.5)</td>
                                                <td style="padding: 4px; border: 1px solid #ccc; color: #008800;">1.52</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">-9.4%</td>
                                                <td style="padding: 4px; border: 1px solid #ccc;">312</td>
                                            </tr>
                                        </table>
                                    </div>
                                </div>
                                
                                <div style="border-left: 4px solid #00aa44; padding-left: 8px; margin-bottom: 16px;">
                                    <div style="font-size: 10pt; color: #666; margin-bottom: 4px;">[ 3 ]:</div>
                                    <div style="background: #f8f8f8; padding: 8px; border-radius: 3px; margin-bottom: 8px;">
<span style="color: #666;"># Filter for robust strategies</span><br>
robust_strategies = analyzer.filter(<br>
&nbsp;&nbsp;&nbsp;&nbsp;min_sharpe=<span style="color: #cc6600;">1.2</span>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;max_drawdown=<span style="color: #cc6600;">0.12</span>,<br>
&nbsp;&nbsp;&nbsp;&nbsp;min_trades=<span style="color: #cc6600;">100</span><br>
)<br><br>
<span style="color: #cc6600;">print</span>(<span style="color: #008800;">f"Found {len(robust_strategies)} robust strategies"</span>)<br>
robust_strategies.plot_equity_curves(vs_benchmark=<span style="color: #0066cc;">True</span>)
                                    </div>
                                    <div style="background: #f0f8ff; padding: 8px; border-radius: 3px; font-size: 10pt;">
                                        Found 12 robust strategies<br>
                                        <div style="margin-top: 8px; padding: 8px; background: #e6f3ff; border: 1px dashed #0066cc; text-align: center;">
                                            📈 Equity Curves Plot<br>
                                            <span style="font-size: 8pt; color: #666;">Interactive plot showing 12 strategies vs SPY benchmark</span>
                                        </div>
                                    </div>
                                </div>
                                
                                <div style="border-left: 4px solid #666; padding-left: 8px; margin-bottom: 16px;">
                                    <div style="font-size: 10pt; color: #666; margin-bottom: 4px;">[ 4 ]:</div>
                                    <div style="background: #f8f8f8; padding: 8px; border-radius: 3px; margin-bottom: 8px;">
<span style="color: #666;"># Click "🔥 Parameter Heatmap" above to insert this snippet</span><br>
<span style="color: #666;"># Or type your own analysis...</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Config Generation Panel -->
                    <div style="background: white; display: flex; flex-direction: column; overflow: hidden;">
                        <div style="background: #f6f6ef; padding: 6px 8px; border-bottom: 1px solid #ccc; font-weight: bold; font-size: 9pt; color: #666;">
                            Config Generator
                        </div>
                        
                        <div style="flex: 1; overflow-y: auto; padding: 8px;">
                            <div style="margin-bottom: 12px;">
                                <h4 style="font-size: 9pt; margin-bottom: 8px; color: #333;">Analysis Results</h4>
                                <div style="background: #f0f8ff; border: 1px solid #b3d9ff; padding: 8px; border-radius: 3px; font-size: 8pt;">
                                    <div><strong>Robust Strategies:</strong> 12</div>
                                    <div><strong>Best Sharpe:</strong> 1.84</div>
                                    <div><strong>Avg Drawdown:</strong> -8.9%</div>
                                    <div><strong>Correlation:</strong> 0.23</div>
                                </div>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <h4 style="font-size: 9pt; margin-bottom: 8px; color: #333;">Strategy Selection</h4>
                                <div style="font-size: 8pt; margin-bottom: 4px;">
                                    <input type="checkbox" checked> BB(23, 1.8) - Sharpe: 1.84<br>
                                    <input type="checkbox" checked> BB(20, 2.0) - Sharpe: 1.67<br>
                                    <input type="checkbox"> BB(18, 1.5) - Sharpe: 1.52<br>
                                    <input type="checkbox"> BB(25, 2.2) - Sharpe: 1.41<br>
                                </div>
                                <button class="btn" style="width: 100%; font-size: 8pt;">Select All Robust</button>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <h4 style="font-size: 9pt; margin-bottom: 8px; color: #333;">Config Type</h4>
                                <div style="font-size: 8pt;">
                                    <input type="radio" name="configType" value="ensemble" checked> Ensemble<br>
                                    <input type="radio" name="configType" value="meta"> Meta Strategy<br>
                                    <input type="radio" name="configType" value="best"> Best Single<br>
                                </div>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <h4 style="font-size: 9pt; margin-bottom: 8px; color: #333;">Generated Config</h4>
                                <div style="background: #f6f6ef; border: 1px solid #ccc; padding: 8px; font-family: monospace; font-size: 7pt; line-height: 1.4;" id="generatedConfig">
name: optimized_ensemble<br>
data: SPY_5m<br>
strategy:<br>
&nbsp;&nbsp;ensemble:<br>
&nbsp;&nbsp;&nbsp;&nbsp;components:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- bollinger_bands:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;period: 23<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std_dev: 1.8<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight: 0.6<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;- bollinger_bands:<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;period: 20<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;std_dev: 2.0<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;weight: 0.4<br>
&nbsp;&nbsp;&nbsp;&nbsp;min_agreement: 0.7
                                </div>
                            </div>
                            
                            <div style="margin-bottom: 12px;">
                                <button class="btn primary" style="width: 100%; margin-bottom: 4px;" id="testGeneratedConfig">🧪 Test Config</button>
                                <button class="btn" style="width: 100%; margin-bottom: 4px;" id="saveToConfigEditor">📝 Save to Editor</button>
                                <button class="btn" style="width: 100%;" id="deployLive">🚀 Deploy Live</button>
                            </div>
                            
                            <div style="margin-top: 12px; padding-top: 8px; border-top: 1px solid #eee;">
                                <div style="font-size: 8pt; color: #666;">
                                    <div><strong>Expected Performance:</strong></div>
                                    <div>Sharpe: 1.92 ± 0.15</div>
                                    <div>Max DD: -7.1%</div>
                                    <div>Correlation: 0.23</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Validation Tab -->
            <div class="tab-content hidden" id="validationTab">
                <div class="analysis-workspace">
                    <!-- Walk Forward Controls -->
                    <div class="analysis-sidebar">
                        <div class="signal-query">
                            <h4>Walk Forward Validation</h4>
                            
                            <div class="query-filters">
                                <div class="filter-row">
                                    <span>Training Window:</span>
                                    <input type="number" class="filter-input" value="252" style="width: 50px;">
                                    <span style="font-size: 7pt;">days</span>
                                </div>
                                <div class="filter-row">
                                    <span>Test Window:</span>
                                    <input type="number" class="filter-input" value="63" style="width: 50px;">
                                    <span style="font-size: 7pt;">days</span>
                                </div>
                                <div class="filter-row">
                                    <span>Step Size:</span>
                                    <input type="number" class="filter-input" value="21" style="width: 50px;">
                                    <span style="font-size: 7pt;">days</span>
                                </div>
                            </div>
                            
                            <div style="margin-top: 8px; font-size: 8pt; color: #666;">
                                <div>Total periods: 12</div>
                                <div>Date range: 2020-01-01 to 2023-12-31</div>
                            </div>
                            
                            <button class="btn primary" style="width: 100%; margin-top: 8px;" id="runWalkForward">Run Walk Forward</button>
                        </div>
                        
                        <div class="quick-actions">
                            <h4>Selection Criteria</h4>
                            <div style="font-size: 8pt; margin-bottom: 8px; color: #666;">
                                Refine selection for each period:
                            </div>
                            
                            <div class="query-filters">
                                <div class="filter-row">
                                    <span>Min Sharpe:</span>
                                    <input type="number" class="filter-input" value="1.0" step="0.1">
                                </div>
                                <div class="filter-row">
                                    <span>Max DD:</span>
                                    <input type="number" class="filter-input" value="0.15" step="0.01">
                                </div>
                                <div class="filter-row">
                                    <span>Min Trades:</span>
                                    <input type="number" class="filter-input" value="20" step="5">
                                </div>
                                <div class="filter-row">
                                    <span>Top N:</span>
                                    <input type="number" class="filter-input" value="5" step="1">
                                </div>
                            </div>
                            
                            <button class="btn action-btn" style="margin-top: 8px;">💡 Smart Selection</button>
                            <button class="btn action-btn">🔄 Manual Override</button>
                        </div>
                        
                        <div class="signal-browser">
                            <h4 style="font-size: 9pt; margin-bottom: 8px;">Period Results</h4>
                            <div id="walkForwardPeriods" style="font-size: 8pt;">
                                <div class="period-item" data-period="1">
                                    <div style="font-weight: bold;">Period 1: 2020-01-01 to 2020-03-31</div>
                                    <div style="color: #666;">Train: 252d | Test: 63d</div>
                                    <div style="color: #008800;">5 strategies selected</div>
                                </div>
                                <div class="period-item" data-period="2" style="margin-top: 8px;">
                                    <div style="font-weight: bold;">Period 2: 2020-04-01 to 2020-06-30</div>
                                    <div style="color: #666;">Train: 252d | Test: 63d</div>
                                    <div style="color: #008800;">3 strategies selected</div>
                                </div>
                                <div class="period-item" data-period="3" style="margin-top: 8px;">
                                    <div style="font-weight: bold;">Period 3: 2020-07-01 to 2020-09-30</div>
                                    <div style="color: #666;">Train: 252d | Test: 63d</div>
                                    <div style="color: #cc0000;">2 strategies selected</div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Walk Forward Results -->
                    <div class="analysis-main">
                        <div class="analysis-dashboard">
                            <div class="chart-container">
                                <div class="chart-title">Walk Forward Performance</div>
                                <div class="chart-placeholder">
                                    Out-of-sample equity curve showing performance in each test period
                                </div>
                            </div>
                            
                            <div class="chart-container">
                                <div class="chart-title">Strategy Selection Stability</div>
                                <div class="chart-placeholder">
                                    Heatmap showing which strategies were selected in each period
                                </div>
                            </div>
                            
                            <div class="chart-container">
                                <div class="chart-title">Rolling Performance Metrics</div>
                                <div class="chart-placeholder">
                                    Rolling Sharpe, drawdown, and win rate across all test periods
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Walk Forward Actions -->
                    <div class="analysis-actions">
                        <h4>Walk Forward Results</h4>
                        
                        <div class="selection-info">
                            <div class="selection-count">12 periods completed</div>
                            <div>Avg OOS Sharpe: 1.23</div>
                            <div>Max OOS DD: -12.4%</div>
                            <div>Win Rate: 67%</div>
                        </div>
                        
                        <div class="action-section">
                            <h5>VALIDATION RESULTS</h5>
                            <button class="btn action-btn">📊 Detailed Analysis</button>
                            <button class="btn action-btn">📈 Compare to Benchmark</button>
                            <button class="btn action-btn">⚠️ Identify Failures</button>
                        </div>
                        
                        <div class="action-section">
                            <h5>REFINEMENT</h5>
                            <button class="btn action-btn">🎯 Optimize Criteria</button>
                            <button class="btn action-btn">📅 Adjust Windows</button>
                            <button class="btn action-btn">🔄 Re-run Validation</button>
                        </div>
                        
                        <div class="progress-section">
                            <div class="run-status status-idle" id="walkForwardStatus">
                                Ready for walk forward validation
                            </div>
                            <button class="btn primary" style="width: 100%;" id="deployValidated">🚀 Deploy Validated Strategy</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Strategy Replay Tab -->
            <div class="tab-content hidden" id="replayTab">
                <div class="analysis-workspace">
                    <!-- Debugger Controls -->
                    <div class="analysis-sidebar">
                        <div class="signal-query">
                            <h4>Strategy Debugger</h4>
                            
                            <div style="margin-bottom: 8px;">
                                <label style="font-size: 8pt; color: #666;">Strategy:</label>
                                <select style="width: 100%; padding: 4px; font-size: 8pt;">
                                    <option>bollinger_bands(period=20, std_dev=2.0)</option>
                                    <option>bollinger_bands(period=23, std_dev=1.8)</option>
                                    <option>ma_crossover(fast=10, slow=30)</option>
                                </select>
                            </div>
                            
                            <div style="margin-bottom: 8px;">
                                <label style="font-size: 8pt; color: #666;">Date Range:</label>
                                <input type="date" style="width: 100%; padding: 4px; font-size: 8pt;" value="2023-01-01">
                                <input type="date" style="width: 100%; padding: 4px; font-size: 8pt; margin-top: 2px;" value="2023-03-31">
                            </div>
                            
                            <button class="btn primary" style="width: 100%; margin-top: 8px;" id="loadDebugSession">Load Debug Session</button>
                        </div>
                        
                        <div class="quick-actions">
                            <h4>Debug Controls</h4>
                            <div style="display: flex; gap: 4px; margin-bottom: 8px;">
                                <button class="btn" id="debugPlay">▶️</button>
                                <button class="btn" id="debugPause">⏸️</button>
                                <button class="btn" id="debugStep">⏭️</button>
                                <button class="btn" id="debugReset">⏮️</button>
                            </div>
                            
                            <div style="font-size: 8pt; margin-bottom: 8px;">
                                <div>Speed: <input type="range" min="1" max="10" value="5" style="width: 60px;"> 5x</div>
                                <div>Bar: 157 of 1,250</div>
                                <div>Date: 2023-02-15 09:35:00</div>
                            </div>
                            
                            <div style="border: 1px solid #ccc; padding: 6px; font-size: 8pt; background: #f8f8f8;">
                                <div style="font-weight: bold; margin-bottom: 4px;">Current Signal</div>
                                <div>Signal: 1 (BUY)</div>
                                <div>Confidence: 0.73</div>
                                <div>Reason: Price below lower band</div>
                            </div>
                        </div>
                        
                        <div class="signal-browser">
                            <h4 style="font-size: 9pt; margin-bottom: 8px;">Feature Values</h4>
                            <div style="font-size: 8pt;">
                                <div class="parameter-item">
                                    <span>Price</span>
                                    <span style="font-weight: bold;">$428.73</span>
                                </div>
                                <div class="parameter-item">
                                    <span>Upper Band</span>
                                    <span>$432.15</span>
                                </div>
                                <div class="parameter-item">
                                    <span>Middle Band</span>
                                    <span>$429.82</span>
                                </div>
                                <div class="parameter-item">
                                    <span>Lower Band</span>
                                    <span style="color: #008800; font-weight: bold;">$427.49</span>
                                </div>
                                <div class="parameter-item">
                                    <span>Band Position</span>
                                    <span>0.27</span>
                                </div>
                                <div class="parameter-item">
                                    <span>Volume</span>
                                    <span>1,247,592</span>
                                </div>
                                <div class="parameter-item">
                                    <span>RSI</span>
                                    <span>28.4</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Chart with Overlays -->
                    <div class="analysis-main">
                        <div class="analysis-dashboard">
                            <div class="chart-container" style="height: 400px;">
                                <div class="chart-title">
                                    Strategy Debug Chart - SPY 5m
                                    <span style="float: right; font-size: 8pt; color: #666;">
                                        Bollinger Bands (20, 2.0) | 2023-02-15 09:35:00
                                    </span>
                                </div>
                                <div class="chart-placeholder" style="height: 350px; position: relative;">
                                    <div style="position: absolute; top: 20px; left: 20px; font-size: 8pt; background: rgba(255,255,255,0.9); padding: 4px; border: 1px solid #ccc;">
                                        📈 Price Chart with Bollinger Bands overlay<br>
                                        🔴 Entry/Exit markers<br>
                                        📊 Volume histogram below<br>
                                        ⏰ Current time cursor: 2023-02-15 09:35:00<br>
                                        🎯 Signal strength indicator
                                    </div>
                                    
                                    <!-- Simulated chart elements -->
                                    <div style="position: absolute; bottom: 20px; left: 20px; width: 90%; height: 60%; border: 1px solid #ccc; background: linear-gradient(45deg, #f0f0f0 25%, transparent 25%, transparent 75%, #f0f0f0 75%), linear-gradient(45deg, #f0f0f0 25%, transparent 25%, transparent 75%, #f0f0f0 75%); background-size: 20px 20px;">
                                        <!-- Entry marker -->
                                        <div style="position: absolute; bottom: 40%; left: 60%; width: 10px; height: 10px; background: #00aa44; border-radius: 50%; border: 2px solid white;"></div>
                                        <!-- Exit marker -->
                                        <div style="position: absolute; bottom: 50%; left: 80%; width: 10px; height: 10px; background: #cc4444; border-radius: 50%; border: 2px solid white;"></div>
                                        <!-- Current position -->
                                        <div style="position: absolute; bottom: 35%; left: 90%; width: 12px; height: 12px; background: #0066cc; border-radius: 50%; border: 3px solid yellow; animation: pulse 1s infinite;"></div>
                                    </div>
                                </div>
                            </div>
                            
                            <div class="chart-container">
                                <div class="chart-title">Trade History</div>
                                <div style="max-height: 150px; overflow-y: auto; font-size: 8pt;">
                                    <table style="width: 100%; border-collapse: collapse;">
                                        <thead>
                                            <tr style="background: #f6f6ef;">
                                                <th style="padding: 4px; text-align: left; border-bottom: 1px solid #ccc;">Time</th>
                                                <th style="padding: 4px; text-align: left; border-bottom: 1px solid #ccc;">Type</th>
                                                <th style="padding: 4px; text-align: left; border-bottom: 1px solid #ccc;">Price</th>
                                                <th style="padding: 4px; text-align: left; border-bottom: 1px solid #ccc;">P&L</th>
                                                <th style="padding: 4px; text-align: left; border-bottom: 1px solid #ccc;">Reason</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">09:15:00</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee; color: #008800;">BUY</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">$426.15</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">-</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">Below lower band</td>
                                            </tr>
                                            <tr>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">09:28:00</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee; color: #cc4444;">SELL</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">$431.22</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee; color: #008800;">+$5.07</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">Above upper band</td>
                                            </tr>
                                            <tr style="background: #fffacd;">
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">09:35:00</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee; color: #008800; font-weight: bold;">BUY</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee; font-weight: bold;">$428.73</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">-</td>
                                                <td style="padding: 3px; border-bottom: 1px solid #eee;">Below lower band</td>
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Debug Actions -->
                    <div class="analysis-actions">
                        <h4>Debug Session</h4>
                        
                        <div class="selection-info">
                            <div class="selection-count">2 trades completed</div>
                            <div>Current P&L: +$5.07</div>
                            <div>Win Rate: 100%</div>
                            <div>Position: LONG</div>
                        </div>
                        
                        <div class="action-section">
                            <h5>BREAKPOINTS</h5>
                            <button class="btn action-btn">🔴 Break on Entry</button>
                            <button class="btn action-btn">🟡 Break on Exit</button>
                            <button class="btn action-btn">⚫ Break on Signal Change</button>
                        </div>
                        
                        <div class="action-section">
                            <h5>ANALYSIS</h5>
                            <button class="btn action-btn">📊 Signal Distribution</button>
                            <button class="btn action-btn">🎯 Entry Accuracy</button>
                            <button class="btn action-btn">⏱️ Holding Period Analysis</button>
                        </div>
                        
                        <div class="action-section">
                            <h5>EXPORT</h5>
                            <button class="btn action-btn">📹 Record Session</button>
                            <button class="btn action-btn">📊 Export Trades</button>
                            <button class="btn action-btn">🐛 Generate Debug Report</button>
                        </div>
                        
                        <div class="progress-section">
                            <div class="run-status status-idle" id="debugStatus">
                                Debug session ready
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tab-content hidden" id="strategyTab">
                <div class="file-tabs">
                    <div class="file-tab active">
                        <span>bollinger_bands.py</span>
                        <span style="cursor: pointer; color: #999; font-weight: bold;">×</span>
                    </div>
                    <div style="background: #f6f6ef; border: 1px solid #ccc; padding: 4px 8px; cursor: pointer; border-radius: 3px; font-size: 8pt;">+ New Strategy</div>
                </div>
                
                <div class="editor-header">
                    <div style="display: flex; gap: 15px; align-items: center;">
                        <span>Python Strategy</span>
                        <span class="validation-success">✓ No errors</span>
                    </div>
                    <div style="display: flex; gap: 8px;">
                        <button class="btn">Test</button>
                        <button class="btn">Save</button>
                        <button class="btn primary">Register Strategy</button>
                    </div>
                </div>
                
                <textarea class="code-editor" spellcheck="false">@strategy(
    name='bollinger_bands',
    category='technical',
    parameter_schema={
        'period': {'type': 'int', 'range': [5, 100], 'default': 20},
        'std_dev': {'type': 'float', 'range': [0.5, 4.0], 'default': 2.0}
    },
    feature_config=['bollinger']
)
def bollinger_bands(features, bar, params):
    """Bollinger Bands mean reversion strategy."""
    period = params.get('period', 20)
    std_dev = params.get('std_dev', 2.0)
    
    # Get features
    upper = features.get(f'bollinger_{period}_{std_dev}_upper')
    lower = features.get(f'bollinger_{period}_{std_dev}_lower')
    
    if upper is None or lower is None:
        return None
    
    price = bar.get('close', 0)
    
    # Mean reversion logic
    if price <= lower:
        signal_value = 1   # Buy at lower band
    elif price >= upper:
        signal_value = -1  # Sell at upper band
    else:
        signal_value = 0
    
    return {
        'signal_value': signal_value,
        'timestamp': bar.get('timestamp'),
        'strategy_id': 'bollinger_bands'
    }</textarea>
                
                <div class="status-bar">
                    <div style="display: flex; gap: 15px;">
                        <span>Line 32, Col 5</span>
                        <span class="validation-success">✓ No syntax errors</span>
                        <span>Strategy registered</span>
                    </div>
                    <div>
                        <span>Last saved: 2 min ago</span>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script>
        // Tab switching functionality
        document.querySelectorAll('.sidebar-tab').forEach(tab => {
            tab.addEventListener('click', () => {
                document.querySelectorAll('.sidebar-tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.sidebar-content').forEach(c => c.classList.add('hidden'));
                
                tab.classList.add('active');
                const tabName = tab.dataset.sidebarTab;
                document.getElementById(tabName + 'Tab').classList.remove('hidden');
            });
        });

        document.querySelectorAll('.main-tab').forEach(tab => {
            tab.addEventListener('click', () => {
                document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
                document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
                
                tab.classList.add('active');
                const tabName = tab.dataset.mainTab;
                document.getElementById(tabName + 'Tab').classList.remove('hidden');
            });
        });

        // Signal table selection
        document.querySelectorAll('#signalTable tbody tr').forEach(row => {
            row.addEventListener('click', () => {
                row.classList.toggle('selected');
                updateSelectionInfo();
            });
        });

        function updateSelectionInfo() {
            const selected = document.querySelectorAll('#signalTable tbody tr.selected');
            const count = selected.length;
            
            if (count > 0) {
                // Calculate averages
                let totalSharpe = 0;
                let totalDD = 0;
                
                selected.forEach(row => {
                    const sharpe = parseFloat(row.cells[1].textContent);
                    const dd = parseFloat(row.cells[2].textContent.replace('%', ''));
                    totalSharpe += sharpe;
                    totalDD += dd;
                });
                
                const avgSharpe = (totalSharpe / count).toFixed(2);
                const avgDD = (totalDD / count).toFixed(1);
                
                document.querySelector('.selection-count').textContent = `${count} strategies selected`;
                document.querySelector('.selection-info div:nth-child(2)').textContent = `Avg Sharpe: ${avgSharpe}`;
                document.querySelector('.selection-info div:nth-child(3)').textContent = `Avg DD: -${Math.abs(avgDD)}%`;
            } else {
                document.querySelector('.selection-count').textContent = '0 strategies selected';
                document.querySelector('.selection-info div:nth-child(2)').textContent = 'Select strategies to see averages';
                document.querySelector('.selection-info div:nth-child(3)').textContent = '';
            }
        }

        // Quick analysis actions
        document.querySelectorAll('.action-btn[data-analysis]').forEach(btn => {
            btn.addEventListener('click', () => {
                const analysisType = btn.dataset.analysis;
                runAnalysis(analysisType);
            });
        });

        function runAnalysis(type) {
            const dashboard = document.getElementById('analysisDashboard');
            
            // Show loading state
            document.getElementById('analysisStatus').className = 'run-status status-running';
            document.getElementById('analysisStatus').textContent = `Running ${type} analysis...`;
            
            // Simulate analysis
            setTimeout(() => {
                document.getElementById('analysisStatus').className = 'run-status status-complete';
                document.getElementById('analysisStatus').textContent = `✓ ${type} analysis complete`;
                
                // Update dashboard content based on analysis type
                updateAnalysisDashboard(type);
            }, 1500);
        }

        function updateAnalysisDashboard(type) {
            const charts = document.querySelectorAll('.chart-placeholder');
            
            const analysisContent = {
                heatmap: 'Interactive heatmap showing Sharpe ratio vs period/std_dev parameters',
                sensitivity: 'Parameter sensitivity analysis showing optimal ranges',
                regime: 'Performance breakdown by market regime (bull/bear/sideways)',
                correlation: 'Strategy correlation matrix and diversification analysis',
                drawdown: 'Underwater plot showing drawdown periods and recovery times'
            };
            
            if (charts.length > 0) {
                charts[0].textContent = analysisContent[type] || 'Analysis results displayed here';
            }
        }

        // Ensemble generation
        document.querySelector('[data-analysis="ensemble"]')?.addEventListener('click', () => {
            const selected = document.querySelectorAll('#signalTable tbody tr.selected');
            if (selected.length === 0) {
                alert('Please select strategies first');
                return;
            }
            
            generateEnsemble(selected);
        });

        function generateEnsemble(selectedStrategies) {
            // Extract strategy information
            const strategies = Array.from(selectedStrategies).map(row => {
                const name = row.cells[0].textContent;
                const sharpe = parseFloat(row.cells[1].textContent);
                return { name, sharpe };
            });
            
            // Generate weights based on Sharpe ratios
            const totalSharpe = strategies.reduce((sum, s) => sum + s.sharpe, 0);
            const weights = strategies.map(s => (s.sharpe / totalSharpe).toFixed(2));
            
            // Generate YAML config
            let configText = 'strategy:\n  ensemble:\n    components:\n';
            strategies.forEach((strategy, i) => {
                const [name, params] = strategy.name.split('(');
                const [period, stdDev] = params ? params.replace(')', '').split(',') : ['20', '2.0'];
                
                configText += `      - bollinger_bands:\n`;
                configText += `          period: ${period}\n`;
                configText += `          std_dev: ${stdDev}\n`;
                configText += `          weight: ${weights[i]}\n`;
            });
            configText += '    min_agreement: 0.7';
            
            document.querySelector('.ensemble-preview').innerHTML = 
                '<div style="font-weight: bold; margin-bottom: 4px;">Generated Config:</div>' + 
                configText.replace(/\n/g, '<br>').replace(/ /g, '&nbsp;');
        }

        // Run backtest from config editor
        document.getElementById('runConfigBtn').addEventListener('click', () => {
            // Switch to analysis tab
            document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
            
            document.querySelector('[data-main-tab="analysis"]').classList.add('active');
            document.getElementById('analysisTab').classList.remove('hidden');
            
            // Start backtest simulation
            document.getElementById('analysisStatus').className = 'run-status status-running';
            document.getElementById('analysisStatus').innerHTML = `
                Running backtest...
                <div class="progress-bar">
                    <div class="progress-fill" id="progressFill"></div>
                </div>
            `;
            
            // Simulate progress
            let progress = 0;
            const progressFill = document.getElementById('progressFill');
            const interval = setInterval(() => {
                progress += Math.random() * 10;
                if (progress > 100) progress = 100;
                
                progressFill.style.width = progress + '%';
                
                if (progress >= 100) {
                    clearInterval(interval);
                    
                    setTimeout(() => {
                        document.getElementById('analysisStatus').className = 'run-status status-complete';
                        document.getElementById('analysisStatus').textContent = '✓ Backtest complete - 205 strategies ready for analysis';
                    }, 500);
                }
            }, 150);
        });

        // Test ensemble
        document.getElementById('testEnsemble').addEventListener('click', () => {
            document.getElementById('analysisStatus').className = 'run-status status-running';
            document.getElementById('analysisStatus').textContent = 'Testing ensemble configuration...';
            
            setTimeout(() => {
                document.getElementById('analysisStatus').className = 'run-status status-complete';
                document.getElementById('analysisStatus').textContent = '✓ Ensemble test complete - Sharpe: 1.92, DD: -7.1%';
            }, 2000);
        });

        // Apply filters
        document.getElementById('applyFilters').addEventListener('click', () => {
            const sharpeMin = parseFloat(document.querySelector('.filter-row:nth-child(1) .filter-input').value);
            const ddMax = parseFloat(document.querySelector('.filter-row:nth-child(2) .filter-input').value);
            const tradesMin = parseInt(document.querySelector('.filter-row:nth-child(3) .filter-input').value);
            
            const rows = document.querySelectorAll('#signalTable tbody tr');
            let visibleCount = 0;
            
            rows.forEach(row => {
                const sharpe = parseFloat(row.cells[1].textContent);
                const dd = Math.abs(parseFloat(row.cells[2].textContent.replace('%', '')) / 100);
                const trades = parseInt(row.cells[3].textContent);
                
                if (sharpe >= sharpeMin && dd <= ddMax && trades >= tradesMin) {
                    row.style.display = '';
                    visibleCount++;
                } else {
                    row.style.display = 'none';
                    row.classList.remove('selected');
                }
            });
            
            document.querySelector('.signal-query h4').textContent = `Signal Database (${visibleCount} strategies)`;
            updateSelectionInfo();
        });

        // Analysis snippet insertion
        const SNIPPETS = {
            load_signals: `# Load all signal traces from backtest
signals = load_signals('bollinger_sweep')
analyzer = PerformanceAnalyzer(signals)
print(f"Loaded {len(signals)} strategy traces")`,

            filter_sharpe: `# Filter strategies by Sharpe ratio
high_sharpe = analyzer.filter(min_sharpe=1.2)
print(f"Found {len(high_sharpe)} strategies with Sharpe > 1.2")
display(high_sharpe.get_performance_summary())`,

            equity_curves: `# Plot equity curves for top strategies
top_strategies = analyzer.top_n(10, metric='sharpe_ratio')
top_strategies.plot_equity_curves(
    vs_benchmark=True,
    normalize=True,
    title='Top 10 Strategies vs SPY'
)`,

            heatmap: `# Create parameter sensitivity heatmap
heatmap_data = analyzer.parameter_heatmap(
    x_param='period', 
    y_param='std_dev', 
    metric='sharpe_ratio'
)
plot_heatmap(heatmap_data, title='Sharpe Ratio by Parameters')`,

            create_ensemble: `# Create ensemble from selected strategies
selected_strategies = analyzer.filter(
    min_sharpe=1.2,
    max_drawdown=0.12,
    min_trades=100
)

ensemble = EnsembleBuilder(selected_strategies)
optimal_weights = ensemble.optimize_weights(method='sharpe')
ensemble_config = ensemble.generate_yaml_config()

print("Generated ensemble config:")
print(ensemble_config)`,

            generate_config: `# Generate production config from analysis
config_generator = ConfigGenerator(analyzer)

# Select best strategies based on analysis
best_strategies = analyzer.filter(
    min_sharpe=1.0,
    max_drawdown=0.15,
    min_trades=50
).top_n(5)

# Generate ensemble config
config = config_generator.create_ensemble(
    strategies=best_strategies,
    weight_method='equal',  # or 'sharpe', 'inverse_volatility'
    min_agreement=0.6
)

print("Generated config ready for deployment:")
print(config)`
        };

        document.querySelectorAll('.snippet-btn').forEach(btn => {
            btn.addEventListener('click', () => {
                const snippetKey = btn.dataset.snippet;
                const snippet = SNIPPETS[snippetKey];
                
                if (snippet) {
                    insertSnippetToNotebook(snippet);
                    btn.style.background = '#d4edda';
                    btn.style.color = '#155724';
                    
                    setTimeout(() => {
                        btn.style.background = '';
                        btn.style.color = '';
                    }, 1000);
                }
            });
        });

        function insertSnippetToNotebook(snippet) {
            // Get current cell count
            const cells = document.querySelectorAll('#analysisTab .notebook-cell');
            const cellNumber = cells.length + 1;
            
            // Create new cell HTML
            const newCellHtml = `
                <div class="border-left: 4px solid #00aa44; padding-left: 8px; margin-bottom: 16px;">
                    <div style="font-size: 10pt; color: #666; margin-bottom: 4px;">[ ${cellNumber} ]:</div>
                    <div style="background: #f8f8f8; padding: 8px; border-radius: 3px; margin-bottom: 8px;">
                        ${snippet.replace(/\n/g, '<br>').replace(/ /g, '&nbsp;')}
                    </div>
                    <div style="background: #f0f8ff; padding: 8px; border-radius: 3px; font-size: 10pt; color: #666;">
                        Click "▶️ Run All" to execute
                    </div>
                </div>
            `;
            
            // Insert into notebook
            const notebookContent = document.querySelector('#analysisTab .notebook-content');
            if (notebookContent) {
                notebookContent.insertAdjacentHTML('beforeend', newCellHtml);
            }
        }

        // Config generation
        document.getElementById('generateConfig').addEventListener('click', () => {
            const configType = document.querySelector('input[name="configType"]:checked').value;
            const selectedStrategies = document.querySelectorAll('#analysisTab input[type="checkbox"]:checked');
            
            generateConfigFromAnalysis(configType, selectedStrategies);
        });

        function generateConfigFromAnalysis(type, selectedStrategies) {
            let config = '';
            
            if (type === 'ensemble') {
                config = `name: optimized_ensemble
data: SPY_5m
strategy:
  ensemble:
    components:`;
                
                Array.from(selectedStrategies).forEach((strategy, i) => {
                    const label = strategy.parentElement.textContent;
                    const match = label.match(/BB\\((\\d+),\\s*([\\d.]+)\\)/);
                    if (match) {
                        const period = match[1];
                        const stdDev = match[2];
                        const weight = (1 / selectedStrategies.length).toFixed(2);
                        
                        config += `
      - bollinger_bands:
          period: ${period}
          std_dev: ${stdDev}
          weight: ${weight}`;
                    }
                });
                
                config += `
    min_agreement: 0.7`;
            }
            
            document.getElementById('generatedConfig').innerHTML = config.replace(/\\n/g, '<br>').replace(/ /g, '&nbsp;');
        }

        // Strategy Replay
        document.getElementById('replayStrategyBtn').addEventListener('click', () => {
            document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
            
            document.querySelector('[data-main-tab="replay"]').classList.add('active');
            document.getElementById('replayTab').classList.remove('hidden');
        });

        // Test generated config
        document.getElementById('testGeneratedConfig').addEventListener('click', () => {
            // Simulate testing the generated config
            const status = document.querySelector('#analysisTab .config-generator .progress-section .run-status');
            if (status) {
                status.className = 'run-status status-running';
                status.textContent = 'Testing generated ensemble...';
                
                setTimeout(() => {
                    status.className = 'run-status status-complete';
                    status.textContent = '✓ Ensemble test complete - Sharpe: 1.92, DD: -7.1%';
                }, 2000);
            }
        });

        // Save to config editor
        document.getElementById('saveToConfigEditor').addEventListener('click', () => {
            const config = document.getElementById('generatedConfig').textContent.replace(/&nbsp;/g, ' ');
            document.getElementById('configEditor').value = config;
            
            // Switch to config editor
            document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
            
            document.querySelector('[data-main-tab="config"]').classList.add('active');
            document.getElementById('configTab').classList.remove('hidden');
        });
        document.getElementById('walkForwardBtn').addEventListener('click', () => {
            document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
            
            document.querySelector('[data-main-tab="validation"]').classList.add('active');
            document.getElementById('validationTab').classList.remove('hidden');
        });

        document.getElementById('runWalkForward').addEventListener('click', () => {
            document.getElementById('walkForwardStatus').className = 'run-status status-running';
            document.getElementById('walkForwardStatus').innerHTML = `
                Running walk forward validation...
                <div class="progress-bar">
                    <div class="progress-fill" id="walkForwardProgress"></div>
                </div>
            `;
            
            // Simulate walk forward progress
            let progress = 0;
            const progressFill = document.getElementById('walkForwardProgress');
            const interval = setInterval(() => {
                progress += Math.random() * 8;
                if (progress > 100) progress = 100;
                
                progressFill.style.width = progress + '%';
                
                if (progress >= 100) {
                    clearInterval(interval);
                    
                    setTimeout(() => {
                        document.getElementById('walkForwardStatus').className = 'run-status status-complete';
                        document.getElementById('walkForwardStatus').textContent = '✓ Walk forward validation complete - 12 periods analyzed';
                    }, 500);
                }
            }, 200);
        });

        // Strategy Debugger
        document.getElementById('debugStrategyBtn').addEventListener('click', () => {
            document.querySelectorAll('.main-tab').forEach(t => t.classList.remove('active'));
            document.querySelectorAll('.tab-content').forEach(c => c.classList.add('hidden'));
            
            document.querySelector('[data-main-tab="debugger"]').classList.add('active');
            document.getElementById('debuggerTab').classList.remove('hidden');
        });

        document.getElementById('loadDebugSession').addEventListener('click', () => {
            document.getElementById('debugStatus').className = 'run-status status-running';
            document.getElementById('debugStatus').textContent = 'Loading debug session...';
            
            setTimeout(() => {
                document.getElementById('debugStatus').className = 'run-status status-complete';
                document.getElementById('debugStatus').textContent = '✓ Debug session loaded - 1,250 bars ready';
            }, 1500);
        });

        // Debug controls
        let debugPlaying = false;
        let debugInterval;

        document.getElementById('debugPlay').addEventListener('click', () => {
            if (!debugPlaying) {
                debugPlaying = true;
                document.getElementById('debugStatus').textContent = '▶️ Playing debug session...';
                
                // Simulate stepping through bars
                debugInterval = setInterval(() => {
                    const currentBar = parseInt(document.querySelector('#debuggerTab .quick-actions div:nth-child(3)').textContent.split(' ')[1]);
                    const newBar = Math.min(currentBar + 1, 1250);
                    document.querySelector('#debuggerTab .quick-actions div:nth-child(3)').textContent = `Bar: ${newBar} of 1,250`;
                    
                    if (newBar >= 1250) {
                        document.getElementById('debugPause').click();
                    }
                }, 200);
            }
        });

        document.getElementById('debugPause').addEventListener('click', () => {
            debugPlaying = false;
            if (debugInterval) clearInterval(debugInterval);
            document.getElementById('debugStatus').textContent = '⏸️ Debug session paused';
        });

        document.getElementById('debugStep').addEventListener('click', () => {
            const currentBar = parseInt(document.querySelector('#debuggerTab .quick-actions div:nth-child(3)').textContent.split(' ')[1]);
            const newBar = Math.min(currentBar + 1, 1250);
            document.querySelector('#debuggerTab .quick-actions div:nth-child(3)').textContent = `Bar: ${newBar} of 1,250`;
            document.getElementById('debugStatus').textContent = `⏭️ Step: Bar ${newBar}`;
        });

        document.getElementById('debugReset').addEventListener('click', () => {
            debugPlaying = false;
            if (debugInterval) clearInterval(debugInterval);
            document.querySelector('#debuggerTab .quick-actions div:nth-child(3)').textContent = 'Bar: 1 of 1,250';
            document.getElementById('debugStatus').textContent = '⏮️ Debug session reset';
        });

        // Walk forward period selection
        document.querySelectorAll('.period-item').forEach(item => {
            item.addEventListener('click', () => {
                document.querySelectorAll('.period-item').forEach(p => p.classList.remove('selected'));
                item.classList.add('selected');
                
                const period = item.dataset.period;
                // Update charts to show selected period details
                updateWalkForwardPeriod(period);
            });
        });

        function updateWalkForwardPeriod(period) {
            // Update the validation dashboard to show specific period results
            const charts = document.querySelectorAll('#validationTab .chart-placeholder');
            if (charts.length > 0) {
                charts[0].textContent = `Period ${period} performance: Train Sharpe 1.84, Test Sharpe 1.23`;
            }
        }
    </script>
</body>
</html>
